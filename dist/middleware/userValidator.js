"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.registerValidator=exports.loginValidator=exports.checkAuth=void 0;var _fastestValidator=_interopRequireDefault(require("fastest-validator"));var _jsonwebtoken=_interopRequireDefault(require("jsonwebtoken"));var _nodemailer=_interopRequireDefault(require("nodemailer"));var _User=_interopRequireDefault(require("../models/User"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}const checkAuth=async(req,res,next)=>{try{const token=req.headers.authorization;const decodedToken=_jsonwebtoken.default.verify(token,process.env.SecretKey);// console.log(decodedToken);
req.userData=decodedToken;next()}catch(e){return res.status(401).json({"message":"Invalid or expired token provided!","error":e})}};exports.checkAuth=checkAuth;const registerValidator=async(req,res,next)=>{const user=new _User.default(req.body);// Validasi data menggunakan fastest-validator
const schema={username:{type:"string",optional:false,max:"100"},email:{type:"string",optional:false,max:"500",unique:true},password:{type:"string",optional:false,min:6}};// Inisiasi dan Validasi inputan user terhadap schema
const v=new _fastestValidator.default;const validationResponse=v.validate(user,schema);// Jika validasi tidak true maka kembalikan error
if(validationResponse!==true){return res.status(400).json({message:"Validation failed",errors:validationResponse})}else{// Validasi apakah user sudah terdaftar
next()}};exports.registerValidator=registerValidator;const loginValidator=async(req,res,next)=>{const user=new _User.default(req.body);// Validasi data menggunakan fastest-validator
const schema={email:{type:"string",optional:false,max:"500",unique:true},password:{type:"string",optional:false,min:6}};// Inisiasi dan Validasi inputan user terhadap schema
const v=new _fastestValidator.default;const validationResponse=v.validate(user,schema);// Jika validasi tidak true maka kembalikan error
if(validationResponse!==true){return res.status(400).json({message:"Validation failed",errors:validationResponse})}else{next()}};exports.loginValidator=loginValidator;